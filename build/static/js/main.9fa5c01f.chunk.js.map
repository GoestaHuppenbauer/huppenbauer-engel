{"version":3,"sources":["imgs/field.jpg","imgs/field2.jpg","imgs/flowers.jpg","imgs/turkey.jpg","imgs/sea2.jpg","imgs/mountains.jpg","imgs/road66.jpg","imgs/newsealand.jpg","imgs/desert.jpg","imgs/road.jpg","imgs/forest2.jpg","imgs/sky.jpg","carousel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BootstrapCarouselDemo","Carousel","fade","interval","keyboard","pauseOnHover","indicators","controls","Item","style","Image","alt","src","img1","img2","fluid","img3","img5","img6","img4","img8","img9","img10","img11","img12","img13","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9fa5c01f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/field.10f77627.jpg\";","module.exports = __webpack_public_path__ + \"static/media/field2.0ff270e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flowers.7af931d6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/turkey.7c6a8a29.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sea2.ff9194c2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mountains.d1e58b13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/road66.d709e70a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/newsealand.4bdf11b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/desert.4c0d8bea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/road.6f2e37d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/forest2.ab4b02e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sky.bbd0d049.jpg\";","import React, { Component } from 'react'  \nimport Carousel from 'react-bootstrap/Carousel' \nimport img1 from './imgs/field.jpg';\nimport img2 from './imgs/field2.jpg';\nimport img3 from './imgs/flowers.jpg';\nimport Image from 'react-bootstrap/Image'\nimport img5 from './imgs/turkey.jpg';\nimport img6 from './imgs/sea2.jpg';\nimport img8 from './imgs/mountains.jpg';\nimport img9 from './imgs/road66.jpg';\nimport img4 from './imgs/newsealand.jpg';\nimport img10 from './imgs/desert.jpg';\nimport img11 from './imgs/road.jpg';\nimport img12 from './imgs/forest2.jpg';\nimport img13 from './imgs/sky.jpg';\n\nexport class BootstrapCarouselDemo extends Component {  \n        render() {  \n                return (  \n                        <div>  \n                         \n                          \n                        <Carousel fade={true} interval={4000} keyboard={true} pauseOnHover={false} indicators={false} controls={true}>  \n                        \n                        <Carousel.Item style={{'flex':'1','height':'100vh','width':'100vw' ,'alignSelf':'cover'}}>  \n                            <Image alt=\"\" src={img1} style={{'flex':'1','height':'100%','width':'undefined' ,'alignSelf':'contain'}}  /> \n                        </Carousel.Item  >  \n                        \n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img2} fluid />               \n                        </Carousel.Item>  \n                            \n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img3} fluid /> \n                        </Carousel.Item> \n\n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img5} fluid /> \n                        </Carousel.Item>\n\n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img6} fluid /> \n                        </Carousel.Item>\n\n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img4} fluid /> \n                        </Carousel.Item>  \n\n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img8} fluid /> \n                        </Carousel.Item> \n\n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img9} fluid /> \n                        </Carousel.Item>  \n\n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img10} fluid /> \n                        </Carousel.Item>  \n\n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img11} fluid /> \n                        </Carousel.Item> \n\n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img12} fluid /> \n                        </Carousel.Item> \n\n                        <Carousel.Item style={{'height':\"100vh\"}}>  \n                            <Image alt=\"\" src={img13} fluid /> \n                        </Carousel.Item> \n\n                       \n                                    \n                        </Carousel>  \n                                </div>  \n                          \n                )  \n        }  \n}  \n  \n\nexport default BootstrapCarouselDemo ","import React from 'react';  \nimport './App.css';  \nimport BootstrapCarouselDemo from './carousel'  \nfunction App() {  \n  return (  \n    <div className=\"App\">  \n    <div className=\"cont h-100 d-inline-block\">\n    <BootstrapCarouselDemo></BootstrapCarouselDemo>  \n    \n    <p className=\"centered\"><span className=\"Überschrift\">WIR PLANEN LEBENSRÄUME</span><br></br>Wenn sie mehr erfahren wollen melden Sie sich bei uns.</p>\n    <p className=\"bottom-right\"><span className=\"name\">Architekturbüro Huppenbauer und Engel</span><br></br>Kochenmühle 2<br></br>D-70771 Leinfelden-Echterdingen<br></br><br></br>07157 / 737930<br></br>info@huppenbauer-engel.de</p>\n    </div>\n    </div>\n  );  \n}  \n  \nexport default App;  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}